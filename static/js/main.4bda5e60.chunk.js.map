{"version":3,"sources":["images/icons/search.svg","styles/colors.ts","styles/breakpoints.ts","components/MainSearch/styles.ts","components/MainSearch/index.tsx","images/icons/heart.svg","images/icons/heart-outline.svg","components/CharacterList/CharacterItem/styles.ts","components/CharacterList/CharacterItem/index.tsx","images/loading.gif","components/Loading/styles.ts","components/Loading/index.tsx","images/icons/arrow-right.svg","images/icons/arrow-left.svg","components/Pagination/styles.ts","components/Pagination/index.tsx","images/icons/hero.svg","contexts/FavoritesContext.ts","services/api.ts","components/CharacterList/styles.ts","components/CharacterList/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","images/logo.svg","pages/Home/styles.ts","styles/grid.ts","pages/Home/index.tsx","hooks/useClickOutside.ts","components/InternalSearch/styles.ts","components/InternalSearch/index.tsx","components/ComicList/styles.ts","components/ComicList/index.tsx","images/icons/comic.svg","images/icons/movies.svg","pages/Character/styles.ts","pages/Character/index.tsx","routes.tsx","styles/normalize.ts","styles/global.ts","hooks/useLocalStorage.ts","App.tsx","index.tsx"],"names":["white","red","gray","breakpoints","sm","md","lg","xl","styled","div","MainSearch","onChange","src","SearchIcon","alt","title","type","placeholder","li","CharacterItem","character","favorites","setFavorites","isFavored","useMemo","find","favoriteItem","id","to","thumbnail","path","extension","name","onClick","filteredFavorites","filter","favorite","length","handleFavorite","HeartIcon","HeartOutlineIcon","Loading","message","LoadingImage","nav","Pagination","numberPages","interval","limit","setOffset","useState","activePage","setActivePage","arrayNumbers","Array","fill","map","_","index","handleClickArrow","direction","newActivePage","handleClickNumber","ArrowLeft","slice","item","className","ArrowRight","defaultProps","FavoritesContext","createContext","axios","create","baseURL","process","params","apikey","TopBar","List","ul","OrderBySelect","FavoritesButton","button","Toggle","props","active","css","CharacterList","content","nameStartsWith","setNameStartsWith","total","setTotal","offset","orderBy","setOrderBy","characters","setCharacters","showFavorites","setShowFavorites","useContext","useEffect","a","api","get","data","results","console","log","response","getCharacters","evt","value","target","HeroIcon","Math","ceil","footer","Footer","Date","getFullYear","Wrapper","Header","header","SubHeader","Container","Home","Logo","useClickOutside","ref","callback","handleClick","e","current","contains","document","addEventListener","removeEventListener","InternalSearch","searchRef","useRef","history","useHistory","showSearchList","redirectToCharacter","preventDefault","closeSearch","splittedUrl","currentTarget","href","split","push","Comic","ComicList","comics","comic","backgroundColor","Info","InfoNumbers","InfoRating","InfoLast","BackgroundName","p","ImageCharacter","img","screen","Character","useParams","setCharacter","setComics","setBackgroundColor","handleLoadImage","result","ColorThief","getColor","join","promiseCharacter","promiseComic","Promise","all","then","values","rating","random","getInfoCharacter","crossOrigin","onLoad","description","ComicIcon","available","MoviesIcon","events","style","backgroundImage","WebkitTextFillColor","format","parseISO","dates","date","locale","ptBR","Routes","basename","exact","component","createGlobalStyle","normalize","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","setItem","stringify","App","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"qOAAe,MAA0B,mC,cCA5BA,EAAQ,UAERC,EACN,UADMA,EAEN,UAGMC,EAEN,UAFMA,EAGN,UCHQC,EAPK,CAClBC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,U,45BCASC,UAAOC,IAAtB,IAGsBR,EAMCE,EAAYC,GAYVD,EAAYC,GASVD,EAAYC,GAa1BF,EAIED,GC9BAS,EAT+B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAC/C,OACE,eAAC,EAAD,WACE,+BAAM,qBAAKC,IAAKC,EAAYC,IAAI,SAASC,MAAM,aAC/C,uBAAOJ,SAAUA,EAAUK,KAAK,OAAOC,YAAY,+D,QChB1C,MAA0B,kCCA1B,MAA0B,0C,o4CCI1BT,UAAOU,GAAtB,IAmB4BjB,EAcCE,EAAYE,GAIZF,EAAYC,GASjBJ,EAMCG,EAAYC,GAOtBF,EAGYC,EAAYC,ICPxBe,EAxCqC,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,aACrEC,EAAYC,mBAAQ,kBACxBH,EAAUI,MAAK,SAACC,GAAD,OAAkCA,EAAaC,KAAOP,EAAUO,QAC9E,CAAEN,EAAWD,EAAUO,KAgB1B,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAMC,GAAE,WAAMR,EAAUO,IAAxB,SACE,iCACE,qBAAKf,IAAG,UAAKQ,EAAUS,UAAUC,KAAzB,+BAAoDV,EAAUS,UAAUE,WAAajB,IAAKM,EAAUY,WAGhH,gCACE,6BAAKZ,EAAUY,OACf,wBAAQC,QAAS,kBAvBvB,SAAwBb,GACtB,GAAIG,EAAW,CACb,IAAMW,EAAoBb,EAAUc,QAAO,SAACC,GAAD,OAA8BA,EAAST,KAAOP,EAAUO,MACnGL,EAAaY,QAETb,EAAUgB,OAAS,GACrBf,EAAa,GAAD,mBACPD,GADO,CAEVD,KAeqBkB,CAAelB,IAAtC,SAEIG,EACI,qBAAKX,IAAK2B,EAAWzB,IAAI,eAAeC,MAAM,iBAC9C,qBAAKH,IAAK4B,EAAkB1B,IAAI,YAAYC,MAAM,uBCnDnD,MAA0B,oC,wRCG1BP,UAAOC,IAAtB,IAaaP,GCKEuC,EATyB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QACzC,OACE,eAAC,EAAD,WACE,qBAAK9B,IAAK+B,EAAc7B,IAAK4B,EAAS3B,MAAO2B,IAC7C,4BAAIA,QChBK,MAA0B,wCCA1B,MAA0B,uC,oxBCG1BlC,UAAOoC,IAAtB,IA+BiB1C,EAMaD,EACXA,GCzBb4C,EAAa,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,UAAiC,EAC7CC,mBAAS,GADoC,mBAC3EC,EAD2E,KAC/DC,EAD+D,KAE7EC,EAAe,IAAIC,MAAMR,GAAaS,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAsBA,EAAQ,KAEtF,SAASC,EAAiBC,GACxB,IAAMC,EAA8B,UAAdD,EAAwBT,EAAa,EAAIA,EAAa,EAC5EF,EAAUD,GAASa,EAAgB,IACnCT,EAAcS,GAGhB,SAASC,EAAmBX,GAC1BF,EAAUD,GAASG,EAAa,IAChCC,EAAcD,GAGhB,OACE,eAAC,EAAD,WACIA,EAAa,EAAI,GAAK,wBAAQlB,QAAS,kBAAM0B,EAAiB,SAAxC,SAAiD,qBAAK/C,IAAKmD,EAAWjD,IAAI,SAASC,MAAM,aACjH,+BAEIsC,EAAaW,MAAOb,EAAa,EAAKJ,EAAWI,EAAa,GAAIK,KAAI,SAACS,GAAD,OACpE,6BACE,wBAAQhC,QAAS,kBAAM6B,EAAkBG,IAAOC,UAAS,UAAKf,IAAec,EAAO,SAAW,IAA/F,SACGA,KAFIA,MAQXZ,EAAaW,MAAOb,EAAa,EAAKA,EAAa,GAAMJ,EAAW,IAAIS,KAAI,SAACS,GAAD,OAC1E,6BACE,wBAAQhC,QAAS,kBAAM6B,EAAkBG,IAAOC,UAAS,UAAKf,IAAec,EAAO,SAAW,IAA/F,SACGA,KAFIA,SAQbd,EAAaL,GAAe,wBAAQb,QAAS,kBAAM0B,EAAiB,UAAxC,SAAkD,qBAAK/C,IAAKuD,EAAYrD,IAAI,aAAUC,MAAM,qBAKhI8B,EAAWuB,aAAe,CACxBrB,SAAU,GAGGF,QC/DA,MAA0B,iCCQ1BwB,EALUC,wBAAc,CACrCjD,UAAW,GACXC,aAAc,e,QCHDiD,E,OAAAA,EAAMC,OAAO,CAC1BC,QAASC,uCACTC,OAAQ,CACNC,OAAQF,sC,y5ECDL,IAAMG,EAASrE,IAAOC,IAAV,IASNP,EAEYC,EAAYC,IAYxB0E,GAAOtE,IAAOuE,GAAV,IAQM5E,EAAYE,GAIZF,EAAYC,IAMtB4E,GAAgBxE,IAAOC,IAAV,IAObR,GAOAgF,GAAkBzE,IAAO0E,OAAV,IAaL/E,EAAYC,GActBH,GAWAkF,GAAS3E,IAAOC,IAAV,IAWIN,EAAYC,IAc7B,SAACgF,GACD,OAAIA,EAAMC,OACDC,YAAP,IAEsBrF,GAIfqF,YAAP,IAEsBtF,MCPfuF,GApGiB,WAC9B,IAAIC,EADgC,EAGUtC,mBAAS,IAHnB,mBAG5BuC,EAH4B,KAGZC,EAHY,OAIRxC,mBAAS,GAJD,mBAI5ByC,EAJ4B,KAIrBC,EAJqB,OAKN1C,mBAAS,GALH,mBAK5B2C,EAL4B,KAKpB5C,EALoB,OAMJC,mBAAS,aANL,mBAM5B4C,EAN4B,KAMnBC,EANmB,OAOE7C,mBAA2B,IAP7B,mBAO5B8C,EAP4B,KAOhBC,EAPgB,OAQQ/C,oBAAS,GARjB,mBAQ5BgD,EAR4B,KAQbC,EARa,OASAC,qBAAW/B,GAAvChD,EAT4B,EAS5BA,UAAWC,EATiB,EASjBA,aAyDnB,OAxDA+E,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BC,EAAIC,IAAI,cAAe,CAC5C7B,OAAQ,CACNkB,SACA7C,MAdI,GAeJ8C,UACAL,eAAgBA,GAAkC,QAP1D,gBAEYgB,EAFZ,EAEYA,KAQRb,EAASa,EAAKA,KAAKd,OACnBM,EAAcQ,EAAKA,KAAKC,SAX5B,gDAaIC,QAAQC,IAAI,KAAMC,UAbtB,0DADc,uBAAC,WAAD,wBAkBdC,KACC,CAAEjB,EA3BS,GA2BMC,EAASL,IAqBzBD,EAFAU,EACE7E,EAAUgB,OAAS,EAEnBhB,EAAUmC,KAAI,SAACpC,GAAD,OACZ,cAAC,EAAD,CAAkCA,UAAWA,EAAWC,UAAWA,EAAWC,aAAcA,GAAxEF,EAAUO,OAIxB,sEAIVqE,EAAWxC,KAAI,SAACpC,GAAD,OACb,cAAC,EAAD,CAAkCA,UAAWA,EAAWC,UAAWA,EAAWC,aAAcA,GAAxEF,EAAUO,OAK/BqE,EAAW3D,OAKd,qCACE,cAAC,EAAD,CAAY1B,SAjChB,SAAsBoG,GAAqC,IACjDC,EAAUD,EAAIE,OAAdD,MACJA,EAAM3E,QAAU,EAClBqD,EAAkBsB,GAElBtB,EAAkB,OA6BlB,eAACb,EAAD,WACE,6CAAgBc,EAAhB,gBACA,gCACE,eAACX,GAAD,WACE,qBAAKpE,IAAKsG,EAAUpG,IAAI,yBAAyBC,MAAM,2BACvD,yBAAQJ,SA/ClB,SAAuBoG,GACrBhB,EAAWgB,EAAIE,OAAOD,QA8CmBhF,KAAK,WAAtC,UACE,wBAAQgF,MAAM,YAAd,kDACA,wBAAQA,MAAM,WAAd,mDACA,wBAAQA,MAAM,QAAd,qCACA,wBAAQA,MAAM,OAAd,4CAGJ,eAAC/B,GAAD,CAAiBhD,QAlDzB,WACEkE,GAAkBD,IAiDZ,UACE,cAACf,GAAD,CAAQE,OAAQa,IAChB,qBAAKtF,IAAK2B,EAAWzB,IAAI,oBAAoBC,MAAM,sBACnD,8DAIN,cAAC+D,GAAD,UACGU,KAEAU,GAAiB,cAAC,EAAD,CAAYpD,YAAaqE,KAAKC,KAAKzB,EA7F7C,IA6F6D3C,MA7F7D,GA6F2EC,UAAWA,OA5B3F,cAAC,EAAD,CAASP,QAAQ,8C,qRCvFblC,WAAO6G,OAAtB,KACsBpH,EAKXD,EAGYG,EAAYC,ICFpBkH,GARU,WACvB,OACE,eAAC,GAAD,oBACK,IAAIC,MAAOC,cADhB,4BCNW,OAA0B,iC,ulCCIlC,IAAMC,GAAUjH,IAAOC,IAAV,MAMPiH,GAASlH,IAAOmH,OAAV,KAGIxH,EAAYC,GAaRD,EAAYC,IAkB1BwH,GAAYpH,IAAOC,IAAV,KAQTP,EAIYC,EAAYC,GAQxBF,G,oIC9DN,IAAM2H,GAAYrH,IAAOC,IAAV,MCuCPqH,GA3BQ,WACrB,OACE,eAACL,GAAD,WACE,cAACC,GAAD,UACE,cAACG,GAAD,UACE,6BACE,eAAC,IAAD,CAAMjG,GAAG,IAAT,UACE,qBAAKhB,IAAKmH,GAAMjH,IAAI,uBAAuBC,MAAM,yBACjD,iEAKR,+BACE,eAAC8G,GAAD,WACE,eAACD,GAAD,WACE,oDACA,yKAEF,cAAC,GAAD,SAGJ,cAAC,GAAD,Q,6CCpBSI,OAdf,SAAgDC,EAAmBC,GACjE,IAAMC,EAAc,SAACC,GACfH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAEnB,SACzCiB,KAGJ7B,qBAAU,WAER,OADAkC,SAASC,iBAAiB,QAASL,GAC5B,WACLI,SAASE,oBAAoB,QAASN,Q,y5CCP7B3H,WAAOC,IAAtB,KAGsBT,EAaGG,EAAYC,GAiBxBF,EAKEA,EASSF,EAwBLE,EAKED,GCINyI,GAlEkB,WAC/B,IAAMC,EAAYC,iBAAuB,MACnCC,EAAUC,cAFqB,EAGS5F,mBAAS,IAHlB,mBAG7BuC,EAH6B,KAGbC,EAHa,OAICxC,mBAA2B,IAJ5B,mBAI7B8C,EAJ6B,KAIjBC,EAJiB,KAK/B8C,EAAiBvH,mBAAQ,kBAAMwE,EAAW3D,OAAS,IAAG,CAAC2D,IA2B7D,SAASgD,EAAoBjC,GAC3BA,EAAIkC,iBACJC,IACA,IAAMC,EAAcpC,EAAIqC,cAAcC,KAAKC,MAAM,KACjDT,EAAQU,KAAKJ,EAAYA,EAAY9G,OAAS,IAGhD,SAAS6G,IACPjD,EAAc,IAGhB,OArCA+B,GAAgBW,EAAWO,GAE3B7C,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBC,EAAIC,IAAI,cAAe,CAC5C7B,OAAQ,CACNc,eAAgBA,GAAkC,QAHxD,gBACUgB,EADV,EACUA,KAKRR,EAAcQ,EAAKA,KAAKC,SAN1B,4CADc,sBAUVjB,EAAepD,QAAU,GAVd,WAAD,wBAWZyE,KAED,CAAErB,IAuBH,eAAC,GAAD,WACE,+BAAM,qBAAK7E,IAAKC,EAAYC,IAAI,SAASC,MAAM,aAC/C,uBAAOJ,SAvBX,SAA4BoG,GAAqC,IACvDC,EAAUD,EAAIE,OAAdD,MACJA,EAAM3E,QAAU,EAClBqD,EAAkBsB,GAElBkC,KAkBqClI,KAAK,OAAOC,YAAY,2DAE3D8H,GACE,qBAAKd,IAAKU,EAAV,SACE,6BAEI3C,EAAWxC,KAAI,SAACpC,GAAD,OACb,6BACE,mBAAGa,QAAS+G,EAAqBK,KAAI,WAAMjI,EAAUO,IAArD,SAA4DP,EAAUY,QAD/DZ,EAAUO,e,uiBCpE9B,IAAMkG,GAAYrH,IAAOC,IAAV,KAOCN,EAAYE,GAMZF,EAAYC,IAOtBoJ,GAAQhJ,IAAOC,IAAV,MCIHgJ,GAf6B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAC7C,OACE,cAAC,GAAD,UAEIA,EAAO1F,MAAM,EAAG,IAAIR,KAAI,SAACmG,GAAD,OACtB,eAACH,GAAD,WACE,qBAAK5I,IAAG,UAAK+I,EAAM9H,UAAUC,KAArB,4BAA6C6H,EAAM9H,UAAUE,WAAajB,IAAK6I,EAAM5I,QAC7F,6BAAK4I,EAAM5I,UAFD4I,EAAMhI,UCjBb,OAA0B,kCCA1B,OAA0B,mC,umHCSlC,IAAM8F,GAAUjH,IAAOC,IAAV,MACE,SAAC2E,GAAD,OAA8BA,EAAMwE,gBAAkBxE,EAAMwE,gBAAkB5J,KAQvF0H,GAASlH,IAAOmH,OAAV,KAGfE,IA2BSgC,GAAOrJ,IAAOC,IAAV,KAOMN,EAAYC,GAWVD,EAAYC,GAOtBF,EAoBFA,EAOAA,GAWA4J,GAActJ,IAAOC,IAAV,KAoBTP,GAKF6J,GAAavJ,IAAOC,IAAV,MAgBVuJ,GAAWxJ,IAAOC,IAAV,KAYRP,GAIA+J,GAAiBzJ,IAAO0J,EAAV,KAGhBlK,EAgBYG,EAAYE,GAIZF,EAAYC,IAUtB+J,GAAiB3J,IAAO4J,IAAV,MAOd,SAAChF,GAAD,MAAwD,WAAjBA,EAAMiF,OAAsB,OAAS,UAElElK,EAAYE,GAMZF,EAAYC,IAOpB,SAACgF,GAAD,MAAwD,YAAjBA,EAAMiF,OAAuB,OAAS,WC3C7EC,GA/Ia,WAAO,IACzB3I,EAAO4I,cAAP5I,GADwB,EAEIuB,qBAFJ,mBAExB9B,EAFwB,KAEboJ,EAFa,OAGFtH,qBAHE,mBAGxBwG,EAHwB,KAGhBe,EAHgB,OAIgBvH,qBAJhB,mBAIxB0G,EAJwB,KAIPc,EAJO,OAKItE,qBAAW/B,GAAvChD,EALwB,EAKxBA,UAAWC,EALa,EAKbA,aACbC,EAAYC,mBAAQ,kBACxBH,EAAUI,MAAK,SAACC,GAAD,OAAkCA,EAAaC,MAAb,OAAoBP,QAApB,IAAoBA,OAApB,EAAoBA,EAAWO,SAC/E,CAAEN,EAAWD,IAuBhB,SAASuJ,EAAgB5D,GACvB,IACM6D,GADa,IAAIC,MACGC,SAAS/D,EAAIE,OAAQ,IAC/CyD,EAAmB,QAAD,OAAUE,EAAOG,KAAK,KAAtB,WAiBpB,OAzCA1E,qBAAU,YAKR,WACE,IAAM2E,EAAmBzE,EAAIC,IAAJ,sBAAuB7E,IAC1CsJ,EAAe1E,EAAIC,IAAJ,sBAAuB7E,EAAvB,YACrBuJ,QAAQC,IAAI,CAACH,EAAkBC,IAC5BG,MAAK,SAACC,GACLb,EAAa,6BACRa,EAAO,GAAG5E,KAAKA,KAAKC,QAAQ,IADrB,IAEV4E,OAVC,GAAAnE,KAAKoE,SAAwB,MAYhCd,EAAUY,EAAO,GAAG5E,KAAKA,KAAKC,YAIpC8E,KACC,CAAC7J,IAsBCP,GAAcsI,EASjB,eAAC,GAAD,CAASE,gBAAiBA,EAA1B,UACE,cAAC,GAAD,UACE,eAAC/B,GAAD,WACE,6BACE,eAAC,IAAD,CAAMjG,GAAG,IAAT,UACE,qBAAKhB,IAAKmH,GAAMjH,IAAI,uBAAuBC,MAAM,yBACjD,6DAGJ,cAAC,GAAD,SAGJ,iCACE,yBAASY,GAAG,cAAZ,SACE,eAACkG,GAAD,WACE,eAACgC,GAAD,WACE,mCACE,6BAAKzI,EAAUY,OACf,wBAAQC,QAAS,kBAzC/B,SAAwBb,GACtB,GAAIG,EAAW,CACb,IAAMW,EAAoBb,EAAUc,QAAO,SAACC,GAAD,OAA8BA,EAAST,KAAOP,EAAUO,MACnGL,EAAaY,QAETb,EAAUgB,OAAS,GACrBf,EAAa,GAAD,mBACPD,GADO,CAEVD,KAiC6BkB,CAAelB,IAAtC,SAEIG,EACI,qBAAKX,IAAK2B,EAAWzB,IAAI,eAAeC,MAAM,iBAC9C,qBAAKH,IAAK4B,EAAkB1B,IAAI,YAAYC,MAAM,mBAI5D,cAACoJ,GAAD,CACEE,OAAO,SACPoB,YAAa,YACb7K,IAAG,UAAKQ,EAAUS,UAAUC,KAAzB,gCAAqDV,EAAUS,UAAUE,WAC5E2J,OAAQf,IAEV,4BAAIvJ,EAAUuK,cACd,gCACE,eAAC7B,GAAD,WACE,2CACA,gCACE,qBAAKlJ,IAAKgL,GAAW9K,IAAI,aAAaC,MAAM,eAC5C,+BAAOK,EAAUsI,OAAOmC,kBAG5B,eAAC/B,GAAD,WACE,wCACA,gCACE,qBAAKlJ,IAAKkL,GAAYhL,IAAI,UAAUC,MAAM,YAC1C,+BAAOK,EAAU2K,OAAOF,kBAG5B,eAAC9B,GAAD,WACE,wCACA,sBAAMiC,MAAO,CAAEC,gBAAgB,2CAAD,OAA6C7K,EAAUkK,OAAvD,iCAAsF,IAAMlK,EAAUkK,OAAtG,MAAkHY,oBAAqB,eAArK,+CAGAxC,EAAOrH,OAAS,GACd,eAAC2H,GAAD,WACE,oDACA,+BAAOmC,aAAOC,aAAS1C,EAAO,GAAG2C,MAAM,GAAGC,MAAO,gBAAiB,CAAEC,OAAQC,kBAMtF,cAACrC,GAAD,CACEsB,YAAa,YACbpB,OAAO,UACPzJ,IAAG,UAAKQ,EAAUS,UAAUC,KAAzB,gCAAqDV,EAAUS,UAAUE,WAC5E2J,OAAQf,IAEV,cAACV,GAAD,UAAiB7I,EAAUY,YAG/B,yBAASL,GAAG,sBAAZ,SACE,eAACkG,GAAD,WACE,2DACA,cAAC,GAAD,CAAW6B,OAAQA,YAIzB,cAAC,GAAD,OArFA,cAAC,GAAD,CAASE,gBAAiBA,EAA1B,SACE,cAAC,EAAD,CAASlH,QAAQ,yCCzEV+J,GAXU,WACvB,OACE,cAAC,IAAD,CAAeC,SAAUhI,wBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiI,OAAK,EAAC7K,KAAK,IAAI8K,UAAW9E,KACjC,cAAC,IAAD,CAAOhG,KAAK,OAAO8K,UAAWtC,W,4yDCVvBhF,mBAAf,M,gFCCeuH,mBAAf,KACIC,ICmCWC,OAnCf,SAA4BC,EAAaC,GAAiB,MAGlB/J,oBAAY,WAChD,IAEE,IAAMe,EAAOiJ,OAAOC,aAAaC,QAAQJ,GAEzC,OAAO/I,EAAOoJ,KAAKC,MAAMrJ,GAAQgJ,EACjC,MAAOM,GAGP,OADA5G,QAAQC,IAAI2G,GACLN,MAZ6C,mBAGjDO,EAHiD,KAGpCC,EAHoC,KAgCxD,MAAO,CAACD,EAdS,SAACxG,GAChB,IAEE,IAAM0G,EAAe1G,EAErByG,EAAeC,GAEfR,OAAOC,aAAaQ,QAAQX,EAAKK,KAAKO,UAAUF,IAChD,MAAOH,GAEP5G,QAAQC,IAAI2G,OCHHM,OAhBf,WAAgB,IAAD,EACuBd,GAAkC,iBAAkB,IAD3E,mBACL1L,EADK,KACMC,EADN,KAGb,OACE,qCACE,cAAC,GAAD,IACA,cAAC,EAAiBwM,SAAlB,CAA2B9G,MAAO,CAChC3F,UAAWA,EACXC,aAAcA,GAFhB,SAIE,cAAC,GAAD,UCnBRyM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF1F,SAAS2F,eAAe,W","file":"static/js/main.4bda5e60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.d23c8543.svg\";","export const white = '#FFFFFF'\n\nexport const red = {\n  100: '#FDECEC',\n  500: '#FF1510'\n}\n\nexport const gray = {\n  100: '#B9B9B9',\n  200: '#8C8C8C',\n  500: '#404040'\n}","const breakpoints = {\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px'\n}\n\nexport default breakpoints","import styled from \"styled-components\";\nimport { gray, red } from \"src/styles/colors\";\nimport breakpoints from \"src/styles/breakpoints\";\n\nexport default styled.div`\n  height: 67px;\n  display: flex;\n  background-color: ${red[100]};\n  border-radius: 35px;\n  width: 100%;\n  max-width: 880px;\n  margin: 55px auto;\n\n  @media (max-width: ${breakpoints.sm}) {\n    height: 50px;\n    margin: 35px auto;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left: 30px;\n    padding-right: 20px;\n\n    @media (max-width: ${breakpoints.sm}) {\n      padding-left: 20px;\n      padding-right: 10px;\n    }\n\n    img {\n      width: 30px;\n      height: 30px;\n\n      @media (max-width: ${breakpoints.sm}) {\n        width: 18px;\n        height: 18px;\n      }\n    }\n  }\n\n  input {\n    padding: 20px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    width: 100%;\n    color: ${gray[200]};\n    font-size: 18px;\n\n    &::placeholder {\n      color: ${red[500]};\n      opacity: 0.6;\n    }\n  }\n`","import React, { ChangeEvent } from 'react';\n\n// Assets\nimport SearchIcon from 'src/images/icons/search.svg'\n\n// Styles\nimport MainSearchStyle from './styles'\n\ntype MainSearchProps = {\n  onChange: (evt: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst MainSearch: React.FC<MainSearchProps> = ({ onChange }: MainSearchProps) => {\n  return (\n    <MainSearchStyle>\n      <span><img src={SearchIcon} alt='Buscar' title='Buscar'/></span>\n      <input onChange={onChange} type='text' placeholder='Procure por heróis (Digite pelo menos 3 caracteres)'/>\n    </MainSearchStyle>\n  )\n}\n\nexport default MainSearch;","export default __webpack_public_path__ + \"static/media/heart.33afdfb5.svg\";","export default __webpack_public_path__ + \"static/media/heart-outline.845f99f3.svg\";","import styled from \"styled-components\";\nimport breakpoints from \"src/styles/breakpoints\";\nimport { red, white, gray } from \"src/styles/colors\";\n\nexport default styled.li`\n\na {\n    text-decoration: none;\n\n    &:hover {\n      figure img {\n        transform: scale(1.1) rotate(5deg);\n        filter: grayscale(50%);\n      }\n    }\n\n    figure {\n      position: relative;\n      margin: 0;\n      overflow: hidden;\n  \n      &::after {\n        content: '';\n        background-color: ${red[500]};\n        height: 4px;\n        width: 100%;\n        bottom: 0;\n        position: absolute;\n        left: 0;\n      }\n  \n      img {\n        width: 100%;\n        height: 250px;\n        object-fit: cover;\n        transition: all 0.5s ease-in-out;\n  \n        @media (max-width: ${breakpoints.md}) {\n          height: 200px;\n        }\n  \n        @media (max-width: ${breakpoints.sm}) {\n          height: 150px;\n        }\n      }\n    }\n  }\n\n\n  div {\n    background-color: ${white};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 25px 0;\n\n    @media (max-width: ${breakpoints.sm}) {\n      padding: 15px 0;\n    }\n\n    h3 {\n      font-size: 20px;\n      font-weight: 800;\n      color: ${gray[500]};\n      margin: 0;\n\n      @media (max-width: ${breakpoints.sm}) {\n        font-size: 16px;\n      }\n    }\n\n    button {\n      border: 0;\n      background-color: transparent;\n      cursor: pointer;\n      outline: none;\n\n      img {\n        width: 20px;\n        height: 20px;\n      }\n    }\n  }\n\n`","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Assets\nimport HeartIcon from 'src/images/icons/heart.svg'\nimport HeartOutlineIcon from 'src/images/icons/heart-outline.svg'\n\n// Types\nimport { CharacterProps } from 'src/types/Character';\n\n// Styles\nimport CharacterItemStyle from './styles';\n\ntype CharacterItemProps = {\n  character: CharacterProps;\n  favorites: CharacterProps[];\n  setFavorites: (value: CharacterProps[]) => void;\n}\n\nconst CharacterItem: React.FC<CharacterItemProps> = ({ character, favorites, setFavorites }: CharacterItemProps) => {\n  const isFavored = useMemo(() => (\n    favorites.find((favoriteItem: CharacterProps) => favoriteItem.id === character.id)\n  ), [ favorites, character.id ])  \n\n  function handleFavorite(character: CharacterProps) {\n    if (isFavored) {\n      const filteredFavorites = favorites.filter((favorite: CharacterProps) => favorite.id !== character.id)\n      setFavorites(filteredFavorites)\n    } else {\n      if (favorites.length < 5) {\n        setFavorites([\n          ...favorites,\n          character\n        ])\n      }\n    }\n  }\n  \n  return (\n    <CharacterItemStyle>\n      <Link to={`/${character.id}`}>\n        <figure>\n          <img src={`${character.thumbnail.path}/standard_fantastic.${character.thumbnail.extension}`} alt={character.name} />\n        </figure>\n      </Link>\n      <div>\n        <h3>{character.name}</h3>\n        <button onClick={() => handleFavorite(character)}>\n          {\n            isFavored\n              ? <img src={HeartIcon} alt='Desfavoritar' title='Desfavoritar' />\n              : <img src={HeartOutlineIcon} alt='Favoritar' title='Favoritar' />\n          }\n        </button>\n      </div>\n    </CharacterItemStyle>\n  )\n}\n\nexport default CharacterItem;","export default __webpack_public_path__ + \"static/media/loading.87c8830c.gif\";","import styled from 'styled-components';\nimport { gray } from 'src/styles/colors';\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  img {\n    border-radius: 100%;\n    width: 70px;\n    height: 70px;\n  }\n\n  p {\n    color: ${gray[200]};\n  }\n`;\n","import React from 'react';\n\n// Assets\nimport LoadingImage from 'src/images/loading.gif'\n\n// Styles\nimport LoadingStyles from './styles';\n\ntype LoadingProps = {\n  message: string\n}\n\nconst Loading: React.FC<LoadingProps> = ({ message }: LoadingProps) => {\n  return (\n    <LoadingStyles>\n      <img src={LoadingImage} alt={message} title={message} />\n      <p>{message}</p>\n    </LoadingStyles>\n  )\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/arrow-right.198d4705.svg\";","export default __webpack_public_path__ + \"static/media/arrow-left.ae63d56c.svg\";","import { gray, red } from \"src/styles/colors\";\nimport styled from \"styled-components\";\n\nexport default styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  button {\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    outline: none;\n    padding: 0;\n  }\n\n  > button {\n    height: 20px;\n    width: 20px;\n  }\n\n  ul {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px 10px;\n    list-style: none;\n\n    li {\n      margin: 0 3px;\n\n      button {\n        height: 30px;\n        width: 30px;\n        color: ${gray[500]};\n        font-size: 18px;\n        font-weight: 700;\n        \n        &.active {\n          border-radius: 100%;\n          border: 2px solid ${red[500]};\n          color: ${red[500]};\n        }\n      }\n    }\n  }\n`","import React, { useState } from 'react';\n\n// Assets\nimport ArrowRight from 'src/images/icons/arrow-right.svg'\nimport ArrowLeft from 'src/images/icons/arrow-left.svg'\n\n// Styles\nimport PaginationStyle from './styles';\n\ntype PaginationProps = {\n  numberPages: number;\n  interval: number;\n  limit: number;\n  setOffset: (value: number) => void\n}\n\nconst Pagination = ({ numberPages, interval, limit, setOffset }: PaginationProps) => {\n  const [ activePage, setActivePage ] = useState(1)\n  const arrayNumbers = new Array(numberPages).fill(1).map((_, index: number) => index + 1)\n\n  function handleClickArrow(direction: string) {\n    const newActivePage = direction === 'right' ? activePage + 1 : activePage - 1\n    setOffset(limit * (newActivePage - 1))\n    setActivePage(newActivePage)\n  }\n\n  function handleClickNumber (activePage: number) {\n    setOffset(limit * (activePage - 1))\n    setActivePage(activePage)\n  }\n\n  return (\n    <PaginationStyle>\n      { activePage - 1 > 0 && <button onClick={() => handleClickArrow('left')}><img src={ArrowLeft} alt='Voltar' title='Voltar' /></button> }\n      <ul>\n        {\n          arrayNumbers.slice((activePage - 1) - interval, (activePage - 1)).map((item: number) => (\n            <li key={item}>\n              <button onClick={() => handleClickNumber(item)} className={`${activePage === item ? 'active' : ''}`}>\n                {item}\n              </button>\n            </li>\n          ))\n        }\n        {\n          arrayNumbers.slice((activePage - 1), (activePage - 1) + (interval + 1)).map((item: number) => (\n            <li key={item}>\n              <button onClick={() => handleClickNumber(item)} className={`${activePage === item ? 'active' : ''}`}>\n                {item}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n      { activePage < numberPages && <button onClick={() => handleClickArrow('right')}><img src={ArrowRight} alt='Avançar' title='Avançar' /></button>}\n    </PaginationStyle>\n  )\n}\n\nPagination.defaultProps = {\n  interval: 3\n}\n\nexport default Pagination;","export default __webpack_public_path__ + \"static/media/hero.a936fecd.svg\";","import { createContext } from 'react'\nimport { CharacterProps } from 'src/types/Character'\n\nconst FavoritesContext = createContext({\n  favorites: [] as CharacterProps[],\n  setFavorites: function(){} as (value: CharacterProps[]) => void\n})\n\nexport default FavoritesContext","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  params: {\n    apikey: process.env.REACT_APP_API_KEY\n  }\n})\n","import styled, { css } from 'styled-components';\nimport { gray, red, white } from 'src/styles/colors';\nimport breakpoints from 'src/styles/breakpoints';\n\nexport const TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  p {\n    font-size: 18px;\n    font-weight: 500;\n    color: ${gray[200]};\n\n    @media (max-width: ${breakpoints.sm}) {\n      margin-bottom: 25px;\n    }\n  }\n\n  > div {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n`\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 30px;\n  margin: 25px 0;\n  list-style: none;\n  padding: 0;\n\n  @media (max-width: ${breakpoints.md}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 15px;\n  }\n`\n\nexport const OrderBySelect = styled.div`\n  display: flex;\n  align-items: center;\n\n  select {\n    border: none;\n    background-color: transparent;\n    color: ${red[500]};\n    outline: none;\n    margin-left: 10px;\n    cursor: pointer;\n  }\n`\n\nexport const FavoritesButton = styled.button`\n  padding: 0;\n  display: flex;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  outline: none;\n\n  &:last-child {\n    margin-left: 20px;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    margin-left: 0 !important;\n    margin-top: 20px;\n    flex: 1 0 auto;\n  }\n\n  img {\n    width: 18px;\n    margin-right: 15px;\n  }\n\n  span {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${red[500]};\n    text-align: left;\n  }\n\n`\n\ntype ToggleStyleProps = {\n  active: boolean;\n}\n\n\nexport const Toggle = styled.div<ToggleStyleProps>`\n  height: 30px;\n  width: 60px;\n  border-radius: 20px;\n  border: none;\n  background-color: #E4E5E9;\n  position: relative;\n  outline: none;\n  cursor: pointer;\n  margin: 0 10px;\n\n  @media (max-width: ${breakpoints.sm}) {\n    margin-left: 0;\n  }\n\n  &::after {\n    content: '';\n    height: 15px;\n    width: 15px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 100%;\n    transition: all 0.3s ease-in-out;\n\n    ${(props: ToggleStyleProps) => {\n      if (props.active) {\n        return css`\n          left: 35px;\n          background-color: ${red[500]};\n          box-shadow: 0px 3px 8px rgba(225, 0, 0, 0.603748);\n        `\n      } else {\n        return css`\n          left: 10px;\n          background-color: ${white};\n        `\n      }\n    }}\n  }\n`","import React, { ChangeEvent, useContext, useEffect, useState } from 'react';\n\n// Components\nimport MainSearch from 'src/components/MainSearch';\nimport CharacterItem from './CharacterItem';\nimport Loading from 'src/components/Loading';\nimport Pagination from 'src/components/Pagination';\n\n// Assets\nimport HeroIcon from 'src/images/icons/hero.svg'\nimport HeartIcon from 'src/images/icons/heart.svg'\n\n// Contexts\nimport FavoritesContext from 'src/contexts/FavoritesContext';\n\n// Config\nimport api from 'src/services/api';\n\n// Types\nimport { CharacterProps } from 'src/types/Character'\n\n// Styles\nimport { TopBar, List, OrderBySelect, FavoritesButton, Toggle } from './styles';\n\n\nconst CharacterList: React.FC = () => {\n  let content\n  const limit = 20\n  const [ nameStartsWith, setNameStartsWith ] = useState('')\n  const [ total, setTotal ] = useState(0)\n  const [ offset, setOffset ] = useState(0)\n  const [ orderBy, setOrderBy ] = useState('-modified')\n  const [ characters, setCharacters ] = useState<CharacterProps[]>([])\n  const [ showFavorites, setShowFavorites ] = useState(false)\n  const { favorites, setFavorites } = useContext(FavoritesContext)\n  useEffect(() => {\n    async function getCharacters() {\n      try {        \n        const { data } = await api.get('/characters', {\n          params: {\n            offset,\n            limit,\n            orderBy,\n            nameStartsWith: nameStartsWith ? nameStartsWith : null\n          }\n        })\n        setTotal(data.data.total)\n        setCharacters(data.data.results)\n      } catch (error) {\n        console.log(error.response);\n      }\n    }\n\n    getCharacters()\n  }, [ offset, limit, orderBy, nameStartsWith ])\n\n  function handleOrderBy(evt: ChangeEvent<HTMLSelectElement>) {\n    setOrderBy(evt.target.value)\n  }\n\n  function toggleFavorites() {\n    setShowFavorites(!showFavorites)\n  }\n\n  function handleSearch(evt: ChangeEvent<HTMLInputElement>) {\n    const { value } = evt.target\n    if (value.length >= 3) {\n      setNameStartsWith(value)\n    } else {\n      setNameStartsWith('')\n    }\n  }\n\n  if (showFavorites) {\n    if (favorites.length > 0) {\n      content = (\n        favorites.map((character: CharacterProps) => (\n          <CharacterItem key={character.id} character={character} favorites={favorites} setFavorites={setFavorites as (value: CharacterProps[]) => void} />\n        ))\n      )\n    } else {\n      content = <p>Você ainda não possui favoritos</p>\n    }\n  } else {\n    content = (\n      characters.map((character: CharacterProps) => (\n        <CharacterItem key={character.id} character={character} favorites={favorites} setFavorites={setFavorites as (value: CharacterProps[]) => void} />\n      ))\n    )\n  }\n\n  if (!characters.length) {\n    return <Loading message='Buscando heróis... Aguarde um momento' />\n  }\n\n  return (\n    <>\n      <MainSearch onChange={handleSearch} />\n      <TopBar>\n        <p>Encontrados {total} heróis</p>\n        <div>\n          <OrderBySelect>\n            <img src={HeroIcon} alt='Ordenar por nome - A/Z' title='Ordenar por nome - A/Z' />\n            <select onChange={handleOrderBy} name='order-by'>\n              <option value='-modified'>Ordenar por modificação (Dec.)</option>\n              <option value='modified'>Ordenar por modificação (Cres.)</option>\n              <option value='-name'>Ordenar por nome (Dec.)</option>\n              <option value='name'>Ordenar por nome (Cres.)</option>\n            </select>\n          </OrderBySelect>\n          <FavoritesButton onClick={toggleFavorites}>\n            <Toggle active={showFavorites} />\n            <img src={HeartIcon} alt='Somente favoritos' title='Somente favoritos' />\n            <span>Somente favoritos</span>\n          </FavoritesButton>\n        </div>\n      </TopBar>\n      <List>\n        {content}\n      </List>\n      { !showFavorites && <Pagination numberPages={Math.ceil(total / limit)} limit={limit} setOffset={setOffset} />}\n    </>\n  )\n}\n\nexport default CharacterList;","import styled from \"styled-components\";\nimport breakpoints from \"src/styles/breakpoints\";\nimport { red, white } from \"src/styles/colors\";\n\n\nexport default styled.footer`\n  background-color: ${red[500]};\n  height: 75px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${white};\n  margin-top: auto;\n\n  @media (max-width: ${breakpoints.sm}) {\n    height: 55px;\n  }\n`","import React from 'react';\n\nimport FooterStyle from './styles';\n\nconst Footer: React.FC = () => {\n  return (\n    <FooterStyle>\n      © {new Date().getFullYear()} Marvel Search Heroes\n    </FooterStyle>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.75792130.svg\";","import styled from 'styled-components';\nimport { gray } from 'src/styles/colors';\nimport breakpoints from 'src/styles/breakpoints';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\nexport const Header = styled.header`\n  padding: 35px 0 40px;\n\n  @media (max-width: ${breakpoints.sm}) {\n    padding: 25px 0 20px;\n  }\n\n  h1 {\n    margin: 0;\n\n    img {\n      display: block;\n      margin: 0 auto;\n      width: 100%;\n      max-width: 330px;\n\n      @media (max-width: ${breakpoints.sm}) {\n        max-width: 160px;\n      }\n    }\n\n    span {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0,0,0,0);\n    }\n  }\n\n  \n`;\n\nexport const SubHeader = styled.div`\n  margin-bottom: 55px;\n  text-align: center;\n\n  h2 {\n    font-size: 32px;\n    font-weight: 800;\n    text-transform: uppercase;\n    color: ${gray[500]};\n    margin-top: 0;\n    margin-bottom: 8px;\n\n    @media (max-width: ${breakpoints.sm}) {\n      font-size: 26px;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    font-weight: 500;\n    color: ${gray[200]};\n    margin: 0;\n  }\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  max-width: 1110px;\n  margin: auto;\n  padding: 0 15px;\n`","import React from 'react';\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CharacterList from 'src/components/CharacterList';\nimport Footer from 'src/components/Footer';\n\n// Assets\nimport Logo from 'src/images/logo.svg'\n\n// Styles\nimport { Wrapper, Header, SubHeader } from './styles'\nimport { Container } from 'src/styles/grid';\n\nconst Home: React.FC = () => {\n  return (\n    <Wrapper>\n      <Header>\n        <Container>\n          <h1>\n            <Link to='/'>\n              <img src={Logo} alt='Marvel Search Heroes' title='Marvel Search Heroes'  />\n              <span>Marvel Search Heroes</span>\n            </Link>\n          </h1>\n        </Container>\n      </Header>\n      <main>\n        <Container>\n          <SubHeader>\n            <h2>Explore o universo</h2>\n            <p>Mergulhe no domínio deslumbrante de todos personagens clássicos que você ama - e aqueles que você descobrirá em breve!</p>\n          </SubHeader>\n          <CharacterList />\n        </Container>\n      </main>\n      <Footer />\n    </Wrapper>\n  )\n}\n\nexport default Home;","import { RefObject, useEffect } from 'react'\n\nfunction useClickOutside<T extends HTMLElement>(ref: RefObject<T>, callback: () => void) {\n  const handleClick = (e: Event) => {\n    if (ref.current && !ref.current.contains(e.target as Node)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useClickOutside","import styled from \"styled-components\";\nimport { gray, red, white } from \"src/styles/colors\";\nimport breakpoints from \"src/styles/breakpoints\";\n\nexport default styled.div`\n  height: 40px;\n  display: flex;\n  background-color: ${white};\n  border-radius: 35px;\n  width: 100%;\n  max-width: 540px;\n  margin: 20px 0;\n  position: relative;\n\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 20px;\n\n    @media (max-width: ${breakpoints.sm}) {\n      padding-left: 20px;\n      padding-right: 10px;\n    }\n\n    img {\n      width: 17px;\n      height: 17px;\n    }\n  }\n\n  input {\n    padding: 0 10px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    width: 100%;\n    color: ${gray[200]};\n    font-size: 12px;\n    font-weight: 500;\n\n    &::placeholder {\n      color: ${gray[200]};\n    }\n  }\n\n  div {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 45px;\n    background-color: ${white};\n    z-index: 3;\n    height: 220px;\n    border-radius: 10px;\n    overflow-y: auto;\n\n    &::-webkit-scrollbar {\n      width: 5px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: rgba(0,0,0,0.2); \n      border-radius: 10px;\n    }\n\n    ul {\n      list-style: none;\n      padding: 10px;\n      margin: 0;\n\n      li {\n        \n        a {\n          text-decoration: none;\n          color: ${gray[200]};\n          padding: 5px 10px;\n          display: block;\n\n          &:hover {\n            color: ${red[500]};\n          }\n        }\n      }\n    }\n  }\n`","import React, { useState, useEffect, ChangeEvent, useRef, useMemo, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom'\n\n// Types\nimport { CharacterProps } from 'src/types/Character';\n\n// Hooks\nimport useClickOutside from 'src/hooks/useClickOutside';\n\n// Assets\nimport SearchIcon from 'src/images/icons/search.svg'\n\n// Services\nimport api from 'src/services/api'\n\n// Styles\nimport InternalSearchStyle from './styles'\n\nconst InternalSearch: React.FC = () => {\n  const searchRef = useRef<HTMLDivElement>(null)\n  const history = useHistory()\n  const [ nameStartsWith, setNameStartsWith ] = useState('')\n  const [ characters, setCharacters ] = useState<CharacterProps[]>([])\n  const showSearchList = useMemo(() => characters.length > 0, [characters])\n  useClickOutside(searchRef, closeSearch)\n\n  useEffect(() => {\n    async function getCharacters() {\n      const { data } = await api.get('/characters', {\n        params: {\n          nameStartsWith: nameStartsWith ? nameStartsWith : null\n        }\n      })\n      setCharacters(data.data.results)\n    }\n\n    if (nameStartsWith.length >= 3) {\n      getCharacters()\n    }\n  }, [ nameStartsWith ])\n\n  function handleSearchChange(evt: ChangeEvent<HTMLInputElement>) {\n    const { value } = evt.target\n    if (value.length >= 3) {\n      setNameStartsWith(value)\n    } else {\n      closeSearch()\n    }\n  }\n\n  function redirectToCharacter(evt: MouseEvent<HTMLAnchorElement>) {\n    evt.preventDefault()\n    closeSearch()\n    const splittedUrl = evt.currentTarget.href.split('/')\n    history.push(splittedUrl[splittedUrl.length - 1])\n  }\n\n  function closeSearch () {\n    setCharacters([])\n  }\n\n  return (\n    <InternalSearchStyle>\n      <span><img src={SearchIcon} alt='Buscar' title='Buscar'/></span>\n      <input onChange={handleSearchChange} type='text' placeholder='Procure por heróis (Digite pelo menos 3 caracteres)'/>\n      {\n        showSearchList && (\n          <div ref={searchRef}>\n            <ul>\n              {\n                characters.map((character: CharacterProps) => (\n                  <li key={character.id}>\n                    <a onClick={redirectToCharacter} href={`/${character.id}`}>{character.name}</a>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        )\n      }\n    </InternalSearchStyle>\n  )\n}\n\nexport default InternalSearch;","import breakpoints from 'src/styles/breakpoints';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  column-gap: 35px;\n  row-gap: 100px;\n  grid-template-columns: repeat(6, 1fr);\n  margin: 65px 0;\n  \n  @media (max-width: ${breakpoints.md}) {\n    grid-template-columns: repeat(4, 1fr);\n    column-gap: 20px;\n    row-gap: 70px;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 30px;\n    row-gap: 30px;\n  }\n`;\n\nexport const Comic = styled.div`\n\n  img {\n    max-width: 100%;\n  }\n`","import React from 'react';\n\n// Types\nimport { ComicProps } from 'src/types/Comic';\n\n// Styles\nimport { Container, Comic } from './styles';\n\ntype ComicListProps = {\n  comics: ComicProps[]\n}\n\nconst ComicList: React.FC<ComicListProps> = ({ comics }: ComicListProps) => {\n  return (\n    <Container>\n      {\n        comics.slice(0, 12).map((comic: ComicProps) => (\n          <Comic key={comic.id}>\n            <img src={`${comic.thumbnail.path}/portrait_xlarge.${comic.thumbnail.extension}`} alt={comic.title} />\n            <h4>{comic.title}</h4>\n          </Comic>\n        ))\n      }\n    </Container>\n  )\n}\n\nexport default ComicList;","export default __webpack_public_path__ + \"static/media/comic.0d28dfc3.svg\";","export default __webpack_public_path__ + \"static/media/movies.f0c0903f.svg\";","import breakpoints from \"src/styles/breakpoints\";\nimport { gray, white } from \"src/styles/colors\";\nimport { Container } from \"src/styles/grid\";\nimport styled from \"styled-components\";\n\ntype WrapperStyleProps = {\n  backgroundColor?: string;\n}\n\nexport const Wrapper = styled.div<WrapperStyleProps>`\n  background-color: ${(props: WrapperStyleProps) => props.backgroundColor ? props.backgroundColor : white};\n  overflow-x: hidden;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const Header = styled.header`\n  padding: 20px 0;\n\n  ${Container} {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  h1 {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-right: 75px;\n\n    img {\n      max-width: 210px;\n    }\n\n    span {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0,0,0,0);\n    }\n  }\n\n`\n\nexport const Info = styled.div`\n  margin: 80px 0;\n  width: 100%;\n  max-width: 275px;\n  position: relative;\n  z-index: 2;\n\n  @media (max-width: ${breakpoints.sm}) {\n    max-width: 100%;\n    margin: 20px 0 50px;\n  }\n\n  header {\n    margin-bottom: 25px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media (max-width: ${breakpoints.sm}) {\n      margin-bottom: 0;\n    }\n\n    h2 {\n      font-size: 40px;\n      font-weight: 800;\n      color: ${gray[500]};\n      text-transform: uppercase;\n      margin: 0;\n    }\n\n    button {\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      outline: none;\n\n      img {\n        width: 30px;\n        height: 30px;\n      }\n    }\n  }\n  \n  p {\n    font-weight: 500;\n    color: ${gray[500]};\n    margin: 0;\n  }\n  \n  > p {\n    font-size: 16px;\n    line-height: 28px;\n    color: ${gray[200]};\n  }\n\n  > div {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-top: 40px;\n  }\n`\n\nexport const InfoNumbers = styled.div`\n  flex: 0 0 50%;\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    img {\n      margin-right: 13px;\n      width: 30px;\n    }\n\n    span {\n      font-size: 14px;\n      font-weight: 500;\n      color: ${gray[500]};\n    }\n  }\n`\n\nexport const InfoRating = styled.div`\n  margin: 28px 0;\n  display: flex;\n  align-items: center;\n\n  p {\n    font-size: 12px;\n    margin-right: 15px;\n  }\n\n  span {\n    -webkit-background-clip: text;\n    font-size: 28px;\n  }\n`\n\nexport const InfoLast = styled.div`\n  display: flex;\n  align-items: center;\n\n  p {\n    font-size: 13px;\n    margin-right: 15px;\n  }\n\n  span {\n    font-size: 12px;\n    font-weight: 500;\n    color: ${gray[500]};\n  }\n`\n\nexport const BackgroundName = styled.p`\n  font-size: 250px;\n  font-weight: bold;\n  color: ${white};\n  position: absolute;\n  text-transform: uppercase;\n  top: 150px;\n  left: 0;\n  text-align: center;\n  margin: 0;\n  cursor: default;\n  user-select: none;\n  word-break: break-word;\n  width: 100%;\n  height: 460px;\n  overflow: hidden;\n  line-height: 0.9;\n  opacity: 0.5;\n\n  @media (max-width: ${breakpoints.md}) {\n    font-size: 250px;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    font-size: 100px;\n    top: 260px;\n  }\n`\n\ntype ImageCharacterStyleProps = {\n  screen: string;\n}\n\nexport const ImageCharacter = styled.img<ImageCharacterStyleProps>`\n  position: absolute;\n  z-index: 1;\n  max-width: 590px;\n  top: 150px;\n  left: 50%;\n  transform: translateX(-25%);\n  display: ${(props: ImageCharacterStyleProps) => ( props.screen === 'mobile' ? 'none' : 'block' )};\n  \n  @media (max-width: ${breakpoints.md}) {\n    max-width: 450px;\n    top: 150px;\n    transform: translateX(-15%);\n  }\n  \n  @media (max-width: ${breakpoints.sm}) {\n    position: relative;\n    top: 0;\n    left: 0;\n    transform: translateX(0);\n    max-width: 100%;\n    margin: 20px auto;\n    display: ${(props: ImageCharacterStyleProps) => ( props.screen === 'desktop' ? 'none' : 'block' )};\n  }\n`","import React, { useEffect, useState, SyntheticEvent, useContext, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom'\nimport ColorThief from 'colorthief'\nimport { format, parseISO } from 'date-fns'\nimport { ptBR } from 'date-fns/locale'\n\n// Components\nimport InternalSearch from 'src/components/InternalSearch';\nimport ComicList from 'src/components/ComicList';\nimport Footer from 'src/components/Footer';\nimport Loading from 'src/components/Loading';\n\n// Contexts\nimport FavoritesContext from 'src/contexts/FavoritesContext';\n\n// Assets\nimport Logo from 'src/images/logo.svg'\nimport HeartIcon from 'src/images/icons/heart.svg'\nimport HeartOutlineIcon from 'src/images/icons/heart-outline.svg'\nimport ComicIcon from 'src/images/icons/comic.svg'\nimport MoviesIcon from 'src/images/icons/movies.svg'\n\n// Config\nimport api from 'src/services/api';\n\n// Types\nimport { CharacterProps } from 'src/types/Character';\nimport { ComicProps } from 'src/types/Comic';\n\n// Styles\nimport { Wrapper, Header, Info, InfoNumbers, InfoRating, InfoLast, BackgroundName, ImageCharacter } from './styles'\nimport { Container } from 'src/styles/grid';\n\ntype ParamsProps = {\n  id: string;\n}\n\nconst Character: React.FC = () => {\n  const { id } = useParams<ParamsProps>()\n  const [ character, setCharacter ] = useState<CharacterProps>()\n  const [ comics, setComics ] = useState<ComicProps[]>()\n  const [ backgroundColor, setBackgroundColor ] = useState<string>()\n  const { favorites, setFavorites } = useContext(FavoritesContext)\n  const isFavored = useMemo(() => (\n    favorites.find((favoriteItem: CharacterProps) => favoriteItem.id === character?.id)\n  ), [ favorites, character ])  \n\n  useEffect(() => {\n    function generateRandomRating () {\n      return Math.random() * (100 - 50) + 50\n    }\n\n    function getInfoCharacter() {\n      const promiseCharacter = api.get(`/characters/${id}`)\n      const promiseComic = api.get(`/characters/${id}/comics`)\n      Promise.all([promiseCharacter, promiseComic])\n        .then((values) => {\n          setCharacter({\n            ...values[0].data.data.results[0],\n            rating: generateRandomRating()\n          })\n          setComics(values[1].data.data.results)\n        })\n    }\n\n    getInfoCharacter()\n  }, [id])\n\n  function handleLoadImage(evt: SyntheticEvent<HTMLImageElement, Event>) {\n    const colorThief = new ColorThief()\n    const result = colorThief.getColor(evt.target, 25);\n    setBackgroundColor(`rgba(${(result.join(','))}, 0.3)`)\n  }\n\n  function handleFavorite(character: CharacterProps) {\n    if (isFavored) {\n      const filteredFavorites = favorites.filter((favorite: CharacterProps) => favorite.id !== character.id)\n      setFavorites(filteredFavorites)\n    } else {\n      if (favorites.length < 5) {\n        setFavorites([\n          ...favorites,\n          character\n        ])\n      }\n    }\n  }\n\n  if (!character || !comics) {\n    return (\n      <Wrapper backgroundColor={backgroundColor}>\n        <Loading message=\"Carregando dados do personagem...\" />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper backgroundColor={backgroundColor}>\n      <Header>\n        <Container>\n          <h1>\n            <Link to='/'>\n              <img src={Logo} alt='Marvel Search Heroes' title='Marvel Search Heroes'  />\n              <span>Marvel Search Heroes</span>\n            </Link>\n          </h1>\n          <InternalSearch />\n        </Container>\n      </Header>\n      <main>\n        <section id='informacoes'>\n          <Container>\n            <Info>\n              <header>\n                <h2>{character.name}</h2>\n                <button onClick={() => handleFavorite(character)}>\n                  {\n                    isFavored\n                      ? <img src={HeartIcon} alt='Desfavoritar' title='Desfavoritar' />\n                      : <img src={HeartOutlineIcon} alt='Favoritar' title='Favoritar' />\n                  }\n                </button>\n              </header>\n              <ImageCharacter\n                screen='mobile'\n                crossOrigin={\"anonymous\"}\n                src={`${character.thumbnail.path}/portrait_incredible.${character.thumbnail.extension}`}\n                onLoad={handleLoadImage}\n              />\n              <p>{character.description}</p>\n              <div>\n                <InfoNumbers>\n                  <p>Quadrinhos</p>\n                  <div>\n                    <img src={ComicIcon} alt='Quadrinhos' title='Quadrinhos' />\n                    <span>{character.comics.available}</span>\n                  </div>\n                </InfoNumbers>\n                <InfoNumbers>\n                  <p>Eventos</p>\n                  <div>\n                    <img src={MoviesIcon} alt='Eventos' title='Eventos' />\n                    <span>{character.events.available}</span>\n                  </div>\n                </InfoNumbers>\n                <InfoRating>\n                  <p>Rating:</p>\n                  <span style={{ backgroundImage: `linear-gradient(90deg, rgb(255, 21, 16) ${character.rating}%, rgb(255, 255, 255) ${100 - character.rating}%)`, WebkitTextFillColor: 'transparent' }}>★★★★★</span>\n                </InfoRating>\n                {\n                  comics.length > 0 && (\n                    <InfoLast>\n                      <p>Último quadrinho</p>\n                      <span>{format(parseISO(comics[0].dates[0].date), \"d MMM'.' yyyy\", { locale: ptBR })}</span>\n                    </InfoLast>\n                  )\n                }\n              </div>\n            </Info>\n            <ImageCharacter\n              crossOrigin={\"anonymous\"}\n              screen='desktop'\n              src={`${character.thumbnail.path}/portrait_incredible.${character.thumbnail.extension}`}\n              onLoad={handleLoadImage}\n            />\n            <BackgroundName>{character.name}</BackgroundName>\n          </Container>\n        </section>\n        <section id='ultimos-lancamentos'>\n          <Container>\n            <h3>Últimos lançamentos</h3>\n            <ComicList comics={comics} />\n          </Container>\n        </section>\n      </main>\n      <Footer />\n    </Wrapper>\n  )\n}\n\nexport default Character;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\n// Pages\nimport Home from './pages/Home'\nimport Character from './pages/Character'\n\nconst Routes: React.FC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/:id' component={Character} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes;","import { css } from 'styled-components'\n\nexport default css`\nhtml{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:'Work Sans',sans-serif}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}\n`","import { createGlobalStyle } from 'styled-components'\nimport normalize from './normalize'\n\nexport default createGlobalStyle`\n  ${normalize}\n`","// Reference: https://usehooks.com/useLocalStorage/\n\nimport { useState } from 'react'\n\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage","import React from 'react';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global'\n\n// Hooks\nimport useLocalStorage from 'src/hooks/useLocalStorage'\n\n// Contexts\nimport FavoritesContext from './contexts/FavoritesContext'\n\n// Types\nimport { CharacterProps } from './types/Character';\n\nfunction App() {\n  const [ favorites, setFavorites ] = useLocalStorage<CharacterProps[]>('@msh/favorites', [])\n\n  return (\n    <>\n      <GlobalStyle />\n      <FavoritesContext.Provider value={{\n        favorites: favorites as CharacterProps[],\n        setFavorites: setFavorites as (value: CharacterProps[]) => void\n      }}>\n        <Routes />\n      </FavoritesContext.Provider>\n    </>\n  ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}